generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model aiku {
  createdAt         DateTime            @default(now()) @db.Timestamptz(6)
  lineOne           String
  lineTwo           String
  lineThree         String
  presetId          Int?                @db.SmallInt
  userId            String              @db.Uuid
  sdUrl             String              @db.VarChar
  id                String              @id @db.Uuid
  isTweeted         Boolean?
  preset            preset?             @relation(fields: [presetId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  aikuActivity      aikuActivity[]
  aikuCollectionMap aikuCollectionMap[]
}

model preset {
  id        Int     @id @default(autoincrement()) @db.SmallInt
  name      String  @db.VarChar
  value     String?
  isDefault Boolean
  aiku      aiku[]
}

model aikuCollectionMap {
  id           String     @id @db.Uuid
  aikuId       String     @db.Uuid
  collectionId String     @db.Uuid
  aiku         aiku       @relation(fields: [aikuId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  collection   collection @relation(fields: [collectionId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model collection {
  id                String              @id @db.Uuid
  createdAt         DateTime            @default(now()) @db.Timestamptz(6)
  userId            String              @db.Uuid
  name              String
  aikuCollectionMap aikuCollectionMap[]
}

model activityTypeCode {
  id               Int            @id @db.SmallInt
  activityTypeName String         @unique
  aikuActivity     aikuActivity[]
}

model aikuActivity {
  id                 String           @id @db.Uuid
  activityTypeCodeId Int              @db.SmallInt
  aikuId             String           @db.Uuid
  activityUserId     String           @db.Uuid
  activityTypeCode   activityTypeCode @relation(fields: [activityTypeCodeId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  aiku               aiku             @relation(fields: [aikuId], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
